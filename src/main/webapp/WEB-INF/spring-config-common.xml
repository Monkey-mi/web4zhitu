<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
       http://www.springframework.org/schema/tx   
       http://www.springframework.org/schema/tx/spring-tx-3.0.xsd   
       http://www.springframework.org/schema/aop   
       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/context
	   http://www.springframework.org/schema/context/spring-context-3.0.xsd">
       
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" >
		<property name="driverClass" value="com.mysql.jdbc.Driver"></property>
		<property name="jdbcUrl" value="${database.jdbcUrl}"></property>
		<property name="user" value="${database.user}" />
		<property name="password" value="${database.password}" />
		<property name="maxPoolSize" value="${database.maxPoolSize}"></property>  
	    <property name="minPoolSize" value="${database.minPoolSize}"></property>
	    <property name="maxIdleTime" value="${database.maxIdleTime}"></property>
	    <property name="idleConnectionTestPeriod" value="${database.idleConnectionTestPeriod}"></property>
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
		<property name="nestedTransactionAllowed" value="true" />
	</bean>

	<!-- 配置事务传播特性 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="generate*" propagation="REQUIRES_NEW"  rollback-for="Exception" />
			<tx:method name="autoCommit*" propagation="REQUIRES_NEW"  rollback-for="Exception" />
			<tx:method name="save*"   propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="reSave*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="batch*"   propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="update*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="delete*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="cancel*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="reduce*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="add*" 	  propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="*forUpdate" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="*" propagation="SUPPORTS"/>
			
			<tx:method name="register" 	  propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="login" 	  propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="loginBySocialAccount" 	  propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="saveConcern" propagation="NESTED" isolation="READ_COMMITTED"  rollback-for="Exception" />
			<tx:method name="cancelConcern" propagation="NESTED" isolation="READ_COMMITTED"  rollback-for="Exception" />
			
			<!-- 不需要事务 -->
			<!-- 
			<tx:method name="query*" propagation="NEVER" />
			<tx:method name="build*" propagation="NEVER" />
			<tx:method name="get*" propagation="NEVER" />
			 -->
			<tx:method name="addClickCount" propagation="NEVER"/>
			<!-- 
			<tx:method name="push*" propagation="NEVER" />
			 -->
			
		</tx:attributes>
	</tx:advice>
	
	<!-- 配置参与事务的类 -->
	<aop:config>
		<aop:advisor 
			pointcut="execution(* com.hts.web.*.service.*.*(..))"
			advice-ref="txAdvice" />
	</aop:config>
	
	<bean id="jdbcTemplate" class="com.hts.web.base.database.ZTJdbcTemplate">
		<constructor-arg ref="dataSource" />
	</bean>
	
	<bean id="jedisConnFactory" 
	    class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" 
	    p:host-name="${redis.ip}" 
	    p:port="${redis.port}"
	    p:password="${redis.password}"
	    p:use-pool="true"/>
	
	<bean id="redisTemplate" 
	    class="org.springframework.data.redis.core.RedisTemplate" 
	    p:connection-factory-ref="jedisConnFactory">
		<property name="keySerializer">  
        	<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>  
	    </property>  
	</bean>

</beans>